// –•—Ä–∞–Ω–∏–ª–∏—â–µ —Ä–µ—Ü–µ–ø—Ç–æ–≤
let recipes = JSON.parse(localStorage.getItem('recipes')) || [];
let shoppingList = JSON.parse(localStorage.getItem('shoppingList')) || [];

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', function() {
    const path = window.location.pathname.split('/').pop() || 'index.html';
    
    if (path === 'index.html' || path === '') {
        initHomePage();
    } else if (path === 'recipe.html') {
        initRecipePage();
    } else if (path === 'shopping-list.html') {
        initShoppingListPage();
    }
});

// –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
function initHomePage() {
    renderRecipes();
    
    // –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
    document.getElementById('addRecipeBtn').addEventListener('click', function() {
        window.location.href = 'recipe.html?new=true';
    });
    
    // –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–æ–≤
    document.getElementById('applyFilters').addEventListener('click', applyFilters);
    document.getElementById('resetFilters').addEventListener('click', resetFilters);
}

// –°—Ç—Ä–∞–Ω–∏—Ü–∞ —Ä–µ—Ü–µ–ø—Ç–∞
function initRecipePage() {
    const urlParams = new URLSearchParams(window.location.search);
    const recipeId = urlParams.get('id');
    const isNew = urlParams.get('new') === 'true';
    
    if (isNew) {
        setupNewRecipe();
    } else if (recipeId) {
        loadRecipe(recipeId);
    } else {
        window.location.href = 'index.html';
    }
}

// –°—Ç—Ä–∞–Ω–∏—Ü–∞ —Å–ø–∏—Å–∫–∞ –ø–æ–∫—É–ø–æ–∫
function initShoppingListPage() {
    renderShoppingList();
    
    // –û—á–∏—Å—Ç–∫–∞ —Å–ø–∏—Å–∫–∞
    document.getElementById('clearListBtn').addEventListener('click', function() {
        if (confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ—á–∏—Å—Ç–∏—Ç—å —Å–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫?')) {
            shoppingList = [];
            saveShoppingList();
            renderShoppingList();
        }
    });
    
    // –ü–µ—á–∞—Ç—å —Å–ø–∏—Å–∫–∞
    document.getElementById('printListBtn').addEventListener('click', function() {
        window.print();
    });
}

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
function renderRecipes(recipesToRender = recipes) {
    const recipesList = document.getElementById('recipesList');
    recipesList.innerHTML = '';
    
    if (recipesToRender.length === 0) {
        recipesList.innerHTML = '<p class="no-recipes">–†–µ—Ü–µ–ø—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</p>';
        return;
    }
    
    recipesToRender.forEach(recipe => {
        const recipeCard = document.createElement('div');
        recipeCard.className = 'recipe-card';
        recipeCard.innerHTML = `
            <div class="recipe-image">
                ${recipe.imageUrl ? `<img src="${recipe.imageUrl}" alt="${recipe.name}">` : '<div class="no-image">–ù–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è</div>'}
            </div>
            <div class="recipe-info">
                <h3>${recipe.name}</h3>
                <div class="recipe-meta">
                    <span>${getMealTypeName(recipe.mealType)}</span>
                    <span>‚è± ${recipe.cookingTime} –º–∏–Ω</span>
                    <span>üçΩ ${recipe.servings} –ø–æ—Ä—Ü.</span>
                </div>
            </div>
        `;
        
        recipeCard.addEventListener('click', function() {
            window.location.href = `recipe.html?id=${recipe.id}`;
        });
        
        recipesList.appendChild(recipeCard);
    });
}

function loadRecipe(recipeId) {
    const recipe = recipes.find(r => r.id === recipeId);
    if (!recipe) {
        window.location.href = 'index.html';
        return;
    }
    
    // –ó–∞–ø–æ–ª–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–µ—Ü–µ–ø—Ç–µ
    document.getElementById('recipeTitle').textContent = recipe.name;
    
    if (recipe.imageUrl) {
        document.getElementById('recipeImage').innerHTML = `<img src="${recipe.imageUrl}" alt="${recipe.name}">`;
    }
    
    document.getElementById('recipeType').textContent = getMealTypeName(recipe.mealType);
    document.getElementById('cookingTime').textContent = `${recipe.cookingTime} –º–∏–Ω—É—Ç`;
    document.getElementById('servings').textContent = recipe.servings;
    document.getElementById('difficulty').textContent = recipe.difficulty || '–ù–µ —É–∫–∞–∑–∞–Ω–∞';
    
    // –ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã
    const ingredientsList = document.getElementById('ingredientsList');
    ingredientsList.innerHTML = '';
    recipe.ingredients.forEach(ingredient => {
        const li = document.createElement('li');
        li.innerHTML = `
            <span>${ingredient.name}</span>
            <span>${ingredient.amount} ${ingredient.unit || ''}</span>
        `;
        ingredientsList.appendChild(li);
    });
    
    // –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
    document.getElementById('instructions').textContent = recipe.instructions;
    
    // –ö–Ω–æ–ø–∫–∞ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ
    const favoriteBtn = document.getElementById('favoriteBtn');
    if (recipe.favorite) {
        favoriteBtn.classList.add('active');
    }
    
    favoriteBtn.addEventListener('click', function() {
        recipe.favorite = !recipe.favorite;
        saveRecipes();
        favoriteBtn.classList.toggle('active');
    });
    
    // –ö–Ω–æ–ø–∫–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    document.getElementById('editRecipeBtn').addEventListener('click', function() {
        window.location.href = `recipe.html?edit=${recipe.id}`;
    });
    
    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ —Å–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫
    document.getElementById('addToShoppingList').addEventListener('click', function() {
        addRecipeToShoppingList(recipe);
        alert('–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ —Å–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫!');
    });
}

function setupNewRecipe() {
    // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ —Ä–µ—Ü–µ–ø—Ç–∞
    // –ü–æ–∫–∞ –ø—Ä–æ—Å—Ç–æ –æ—Å—Ç–∞–≤–ª—è–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø—É—Å—Ç–æ–π –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞
    document.getElementById('editRecipeBtn').textContent = '–°–æ–∑–¥–∞—Ç—å —Ä–µ—Ü–µ–ø—Ç';
    document.getElementById('addToShoppingList').style.display = 'none';
    document.getElementById('favoriteBtn').style.display = 'none';
}

function renderShoppingList() {
    const selectedRecipesList = document.getElementById('selectedRecipesList');
    const shoppingListElement = document.getElementById('shoppingList');
    
    selectedRecipesList.innerHTML = '';
    shoppingListElement.innerHTML = '';
    
    if (shoppingList.length === 0) {
        shoppingListElement.innerHTML = '<li>–°–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫ –ø—É—Å—Ç</li>';
        return;
    }
    
    // –ü–æ–ª—É—á–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ —Ä–µ—Ü–µ–ø—Ç—ã –≤ —Å–ø–∏—Å–∫–µ –ø–æ–∫—É–ø–æ–∫
    const uniqueRecipeIds = [...new Set(shoppingList.map(item => item.recipeId))];
    
    uniqueRecipeIds.forEach(recipeId => {
        const recipe = recipes.find(r => r.id === recipeId);
        if (recipe) {
            const li = document.createElement('li');
            li.textContent = recipe.name;
            selectedRecipesList.appendChild(li);
        }
    });
    
    // –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é
    const groupedIngredients = {};
    
    shoppingList.forEach(item => {
        if (!groupedIngredients[item.name]) {
            groupedIngredients[item.name] = {
                amount: 0,
                unit: item.unit
            };
        }
        groupedIngredients[item.name].amount += item.amount;
    });
    
    // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Å–≥—Ä—É–ø–ø–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã
    for (const [name, data] of Object.entries(groupedIngredients)) {
        const li = document.createElement('li');
        li.innerHTML = `
            <span>${name}</span>
            <span>${data.amount} ${data.unit || ''}</span>
        `;
        shoppingListElement.appendChild(li);
    }
}

function addRecipeToShoppingList(recipe) {
    recipe.ingredients.forEach(ingredient => {
        shoppingList.push({
            recipeId: recipe.id,
            name: ingredient.name,
            amount: ingredient.amount,
            unit: ingredient.unit
        });
    });
    
    saveShoppingList();
}

function applyFilters() {
    const mealType = document.getElementById('mealType').value;
    const ingredientFilter = document.getElementById('ingredientFilter').value.toLowerCase();
    const timeFilter = parseInt(document.getElementById('timeFilter').value) || 0;
    
    let filteredRecipes = recipes;
    
    if (mealType) {
        filteredRecipes = filteredRecipes.filter(recipe => recipe.mealType === mealType);
    }
    
    if (ingredientFilter) {
        filteredRecipes = filteredRecipes.filter(recipe => 
            recipe.ingredients.some(ing => 
                ing.name.toLowerCase().includes(ingredientFilter)
            )
        );
    }
    
    if (timeFilter > 0) {
        filteredRecipes = filteredRecipes.filter(recipe => recipe.cookingTime <= timeFilter);
    }
    
    renderRecipes(filteredRecipes);
}

function resetFilters() {
    document.getElementById('mealType').value = '';
    document.getElementById('ingredientFilter').value = '';
    document.getElementById('timeFilter').value = '';
    renderRecipes();
}

function getMealTypeName(mealType) {
    const types = {
        'breakfast': '–ó–∞–≤—Ç—Ä–∞–∫',
        'lunch': '–û–±–µ–¥',
        'dinner': '–£–∂–∏–Ω',
        'dessert': '–î–µ—Å–µ—Ä—Ç',
        'snack': '–ó–∞–∫—É—Å–∫–∞'
    };
    return types[mealType] || mealType;
}

function saveRecipes() {
    localStorage.setItem('recipes', JSON.stringify(recipes));
}

function saveShoppingList() {
    localStorage.setItem('shoppingList', JSON.stringify(shoppingList));
}

// –ü—Ä–∏–º–µ—Ä –Ω–∞—á–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
if (recipes.length === 0) {
    recipes = [
        {
            id: '1',
            name: '–û–º–ª–µ—Ç —Å –æ–≤–æ—â–∞–º–∏',
            mealType: 'breakfast',
            cookingTime: 15,
            servings: 2,
            difficulty: '–õ–µ–≥–∫–æ',
            ingredients: [
                { name: '–Ø–π—Ü–∞', amount: 4, unit: '—à—Ç' },
                { name: '–ü–æ–º–∏–¥–æ—Ä—ã', amount: 1, unit: '—à—Ç' },
                { name: '–ü–µ—Ä–µ—Ü –±–æ–ª–≥–∞—Ä—Å–∫–∏–π', amount: 0.5, unit: '—à—Ç' },
                { name: '–ú–æ–ª–æ–∫–æ', amount: 50, unit: '–º–ª' },
                { name: '–°–æ–ª—å', amount: 1, unit: '—â–µ–ø–æ—Ç–∫–∞' }
            ],
            instructions: '1. –í–∑–±–µ–π—Ç–µ —è–π—Ü–∞ —Å –º–æ–ª–æ–∫–æ–º –∏ —Å–æ–ª—å—é.\n2. –ù–∞—Ä–µ–∂—å—Ç–µ –æ–≤–æ—â–∏ –Ω–µ–±–æ–ª—å—à–∏–º–∏ –∫—É–±–∏–∫–∞–º–∏.\n3. –û–±–∂–∞—Ä—å—Ç–µ –æ–≤–æ—â–∏ –Ω–∞ —Å–∫–æ–≤–æ—Ä–æ–¥–µ 2-3 –º–∏–Ω—É—Ç—ã.\n4. –ó–∞–ª–µ–π—Ç–µ —è–∏—á–Ω–æ–π —Å–º–µ—Å—å—é –∏ –∂–∞—Ä—å—Ç–µ –Ω–∞ —Å—Ä–µ–¥–Ω–µ–º –æ–≥–Ω–µ –¥–æ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏.',
            favorite: true
        },
        {
            id: '2',
            name: '–ü–∞—Å—Ç–∞ –ö–∞—Ä–±–æ–Ω–∞—Ä–∞',
            mealType: 'dinner',
            cookingTime: 25,
            servings: 2,
            difficulty: '–°—Ä–µ–¥–Ω–µ',
            ingredients: [
                { name: '–°–ø–∞–≥–µ—Ç—Ç–∏', amount: 200, unit: '–≥' },
                { name: '–ë–µ–∫–æ–Ω', amount: 150, unit: '–≥' },
                { name: '–Ø–π—Ü–∞', amount: 2, unit: '—à—Ç' },
                { name: '–°—ã—Ä –ü–∞—Ä–º–µ–∑–∞–Ω', amount: 50, unit: '–≥' },
                { name: '–ß–µ—Å–Ω–æ–∫', amount: 2, unit: '–∑—É–±—á–∏–∫–∞' },
                { name: '–°–æ–ª—å', amount: 1, unit: '—â–µ–ø–æ—Ç–∫–∞' },
                { name: '–ü–µ—Ä–µ—Ü —á–µ—Ä–Ω—ã–π', amount: 1, unit: '—â–µ–ø–æ—Ç–∫–∞' }
            ],
            instructions: '1. –û—Ç–≤–∞—Ä–∏—Ç–µ –ø–∞—Å—Ç—É —Å–æ–≥–ª–∞—Å–Ω–æ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –Ω–∞ —É–ø–∞–∫–æ–≤–∫–µ.\n2. –û–±–∂–∞—Ä—å—Ç–µ –±–µ–∫–æ–Ω —Å —á–µ—Å–Ω–æ–∫–æ–º –¥–æ —Ö—Ä—É—Å—Ç—è—â–µ–π –∫–æ—Ä–æ—á–∫–∏.\n3. –í–∑–±–µ–π—Ç–µ —è–π—Ü–∞ —Å —Ç–µ—Ä—Ç—ã–º –ø–∞—Ä–º–µ–∑–∞–Ω–æ–º.\n4. –°–º–µ—à–∞–π—Ç–µ –≥–æ—Ä—è—á—É—é –ø–∞—Å—Ç—É —Å –±–µ–∫–æ–Ω–æ–º, –∑–∞—Ç–µ–º –±—ã—Å—Ç—Ä–æ –¥–æ–±–∞–≤—å—Ç–µ —è–∏—á–Ω—É—é —Å–º–µ—Å—å, –ø–æ—Å—Ç–æ—è–Ω–Ω–æ –ø–æ–º–µ—à–∏–≤–∞—è.\n5. –ü–æ–¥–∞–≤–∞–π—Ç–µ —Å—Ä–∞–∑—É –∂–µ, –ø–æ—Å—ã–ø–∞–≤ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º –ø–∞—Ä–º–µ–∑–∞–Ω–æ–º –∏ –ø–µ—Ä—Ü–µ–º.',
            favorite: false
        }
    ];
    saveRecipes();
}